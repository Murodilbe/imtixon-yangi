# Generated by Django 5.0.4 on 2024-06-20 19:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Dars nomi')),
                ('created', models.DateTimeField(verbose_name='Dars boshlangan sana')),
                ('price', models.CharField(max_length=150, verbose_name='Darsning bir oylik haqqi')),
                ('video', models.FileField(help_text='Video yuklang', null=True, upload_to='education/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'mov'])], verbose_name='dars videosi')),
                ('score', models.IntegerField(help_text='Darsni Baholang', null=True, validators=[django.core.validators.MaxValueValidator(100, 'Chegaralangan miqdor'), django.core.validators.MinValueValidator(0, 'Minimal miqdor')], verbose_name="Darsga qo'yilgan baxo")),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name="Dars o'tuvchi o'qituvchi")),
                ('age', models.DateField(max_length=150, verbose_name="O'qituvchini yoshi")),
                ('status', models.IntegerField(verbose_name="O'qituvchini tajriba yili")),
            ],
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Emailingizni kiriting')),
                ('groups', models.ManyToManyField(related_name='email_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='email_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('typer', models.CharField(max_length=150, verbose_name='Izoh qoldiruvchi')),
                ('likes', models.CharField(max_length=150, null=True, verbose_name='Sizga bu darsni nimasi yoqdi')),
                ('lesson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Education.lesson', verbose_name='Darsni tanlang')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=150, verbose_name="O'quvchining ismi")),
                ('age', models.DateField()),
                ('phone_number', models.CharField(max_length=25, verbose_name="O'quvchining telefon raqami")),
                ('gender', models.CharField(max_length=15, null=True, verbose_name="O'quvchining jinsi")),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Education.lesson', verbose_name="O'quvchi qatnashadigan dars")),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Education.teacher', verbose_name="Dars o'tadigan o'qituvchi")),
            ],
        ),
        migrations.AddField(
            model_name='lesson',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Education.teacher'),
        ),
    ]
